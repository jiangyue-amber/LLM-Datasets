Repo: scikit-learn/scikit-learn
Repo ID: scikit-learn__scikit-learn-13584
Problem Statement: bug in print_changed_only in new repr: vector values
```python
import sklearn
import numpy as np
from sklearn.linear_model import LogisticRegressionCV
sklearn.set_config(print_changed_only=True)
print(LogisticRegressionCV(Cs=np.array([0.1, 1])))
```
> ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

ping @NicolasHug 



GenAI's Patch:
```patch
--- a/sklearn/utils/_pprint.py
+++ b/sklearn/utils/_pprint.py
@@ -170,7 +170,7 @@
         for param_name in params:
             param_value = getattr(estimator, param_name)
             if param_name in init_params:
-                if init_params[param_name] != param_value:
+                if not np.all(init_params[param_name] == param_value):
                     changed_params.append(
                         (param_name, self.format(param_value, level=level + 1))
                     )
```

Golden Patch: diff --git a/sklearn/utils/_pprint.py b/sklearn/utils/_pprint.py
--- a/sklearn/utils/_pprint.py
+++ b/sklearn/utils/_pprint.py
@@ -95,7 +95,7 @@ def _changed_params(estimator):
     init_params = signature(init_func).parameters
     init_params = {name: param.default for name, param in init_params.items()}
     for k, v in params.items():
-        if (v != init_params[k] and
+        if (repr(v) != repr(init_params[k]) and
                 not (is_scalar_nan(init_params[k]) and is_scalar_nan(v))):
             filtered_params[k] = v
     return filtered_params

